/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package dashboard;

import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import database.koneksi;
import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Abdul Latip Muhyi
 */
public class laporanBarangMasuk extends javax.swing.JInternalFrame {

    /**
     * Creates new form laporanBarangMasuk
     */
    public static int statusSearh = 0;
    
    public laporanBarangMasuk() {
        initComponents();
        
        show_barang_inJtable();
        
        
        
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI)this.getUI();
        ui.setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTLaporanMasuk = new javax.swing.JTable();
        print = new javax.swing.JButton();
        cari = new javax.swing.JButton();
        tfSearh = new javax.swing.JTextField();

        jButton1.setFont(new java.awt.Font("Swis721 LtCn BT", 1, 18)); // NOI18N
        jButton1.setText("Cetak");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jDesktopPane1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Swis721 LtCn BT", 1, 18)); // NOI18N
        jLabel2.setText("Laporan Barang Masuk");

        jTLaporanMasuk.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode Barang", "Nama Barang", "Kandungan Nikotin", "Type Barang", "Harga Beli", "Harga Jual", "QTY", "Suplier", "Tanggal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTLaporanMasuk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTLaporanMasukMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTLaporanMasuk);

        print.setFont(new java.awt.Font("Swis721 LtCn BT", 1, 18)); // NOI18N
        print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-print.png"))); // NOI18N
        print.setText("Cetak");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        cari.setFont(new java.awt.Font("Swis721 LtCn BT", 1, 18)); // NOI18N
        cari.setText("Cari");
        cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariActionPerformed(evt);
            }
        });

        jDesktopPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jScrollPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(print, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(cari, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(tfSearh, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1274, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tfSearh, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cari)
                        .addGap(56, 56, 56)
                        .addComponent(print)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel2))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfSearh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cari, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(267, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    koneksi k = new koneksi();
    Connection con = k.connection;
    
    public ArrayList<barang> getBarangList()
    {
       ArrayList<barang> barangList = new ArrayList<barang>();
       
       String query = "SELECT * FROM barang";
       
       Statement st;
       ResultSet rs;
       
       try{
           st = con.createStatement();
           rs = st.executeQuery(query);
           
           barang Barang;           
           while(rs.next()){
               Barang = new barang(rs.getInt("kode_barang"),rs.getString("nama_barang"), 
                       rs.getInt("kandungan_nikotin"), rs.getInt("id_type"), 
                       rs.getDouble("harga_jual"), rs.getDouble("harga_beli"), rs.getInt("stok"), rs.getString("suplier"), rs.getString("tanggal"));
               barangList.add(Barang);
           }        
       }catch(Exception e){
           e.printStackTrace();
       }       
       return barangList;
    }
    
    public void show_barang_inJtable(){
        
        ArrayList<barang> list = getBarangList();
        
        DefaultTableModel model = (DefaultTableModel)jTLaporanMasuk.getModel();
        int b;
        Object[] row = new Object[9];
        
        for(int i=0; i < list.size(); i++){
            
            row[0] = list.get(i).getKodeBarang();
            row[1] = list.get(i).getNamaBarang();
            row[2] = list.get(i).getTypeBarang();
            row[3] = list.get(i).getKandunganNikotin();
            row[4] = list.get(i).getHargaJual();
            row[5] = list.get(i).getHargaBeli();
            row[6] = list.get(i).getStok();
            row[7] = list.get(i).getSuplier();
            row[8] = list.get(i).getTanggal();
            
            model.addRow(row);
        }       
    }
    
    public void executeSQLQuery(String query, String pesan)
    {
        Statement st;
        
        try{
           st = con.createStatement();
           
           if(st.executeUpdate(query) == 1){
               
               //refresh jtable data
               DefaultTableModel model = (DefaultTableModel)jTLaporanMasuk.getModel();
               model.setRowCount(0);
               show_barang_inJtable();
               
               JOptionPane.showMessageDialog(null, "Data " + pesan + " Succefully");
           }
           else{
               JOptionPane.showMessageDialog(null, "Data Not " + pesan);           
           }
                 
       }catch(Exception e){
           e.printStackTrace();
       }        
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTLaporanMasukMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTLaporanMasukMouseClicked
//        jTextFieldKodeBarang.setEditable(false);
//              
//        //menampilkan data yang di klik pada table ke dalam form      
//        
//        int i = jTLaporanMasuk.getSelectedRow();
//        
//        TableModel model = jTLaporanMasuk.getModel();
//        
//        jTextFieldKodeBarang.setText(model.getValueAt(i, 0).toString());
//        jTextFieldNamaBarang.setText(model.getValueAt(i, 1).toString());
//        jTextFieldKandunganNikotin.setText(model.getValueAt(i, 2).toString());
//        cbTypeBarang.getModel().setSelectedItem("Juice");
//        jTextFieldHargaJual.setText(model.getValueAt(i, 4).toString());
//        jTextFieldHargaBeli.setText(model.getValueAt(i, 5).toString());
//        jTextFieldQty.setText(model.getValueAt(i, 6).toString());
//        jTextFieldSuplier.setText(model.getValueAt(i, 7).toString());
    }//GEN-LAST:event_jTLaporanMasukMouseClicked

    public void openFile(String file){
        try{
            File path = new File(file);
            Desktop.getDesktop().open(path);
        }catch(IOException e){
            e.printStackTrace();
        }
    }
    
    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
//        String tanggal = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(Calendar.getInstance().getTime());
        //System.out.println(tanggal);
        
//        String nomorNota = tfNomorNota.getText();
//        double grandTotal = Double.parseDouble(tfTotalPembelian.getText());
//        double bayar = Double.parseDouble(tfBayar.getText());
//        String jenisBayar = "Cash";
//        int id_pengguna=101;
          
        
        
        
//        String query = "INSERT INTO `penjualan_header`(`nomor_nota`, `tanggal`, `grand_total`, `bayar`, `jenis_pembayaran`, `id_pengguna`) "
//                + "VALUES ('"+nomorNota+"','"+tanggal+"','"+grandTotal+"','"+bayar+"','"+jenisBayar+"','"+id_pengguna+"')";
//        
//        simpanTransaksi(query);

        Document doc = new Document();

        try {
            JFileChooser jFileChooser = new JFileChooser();
            jFileChooser.showSaveDialog(this);
            File saveFile = jFileChooser.getSelectedFile();

            if(saveFile != null){
//                saveFile = new File(saveFile.toString()+".pdf");
                PdfWriter.getInstance(doc, new FileOutputStream(new File(saveFile.toString()+".pdf")));

                doc.open();

                PdfPTable tabel = new PdfPTable(7);

                
                tabel.addCell("Kode Barang");
                tabel.addCell("Nama Barang");
                tabel.addCell("Kandungan NIkotin");
                tabel.addCell("Type Barang");
                tabel.addCell("Harga Beli");
                tabel.addCell("Harga Jual");
                tabel.addCell("Qty");
                tabel.addCell("Supplier");
                for(int a=0 ; a<jTLaporanMasuk.getRowCount(); a++){
                    String kode = jTLaporanMasuk.getValueAt(a, 0).toString();
                    String nama = jTLaporanMasuk.getValueAt(a, 1).toString();
                    String nikotin = jTLaporanMasuk.getValueAt(a, 2).toString();
                    String type = jTLaporanMasuk.getValueAt(a, 3).toString();
                    String hBeli = jTLaporanMasuk.getValueAt(a, 4).toString();
                    String hJual = jTLaporanMasuk.getValueAt(a, 5).toString();
                    String qty = jTLaporanMasuk.getValueAt(a, 6).toString();
                    String supplier = jTLaporanMasuk.getValueAt(a, 7).toString();

                    tabel.addCell(kode);
                    tabel.addCell(nama);
                    tabel.addCell(nikotin);
                    tabel.addCell(type);
                    tabel.addCell(hBeli);
                    tabel.addCell(hJual);
                    tabel.addCell(qty);
                    tabel.addCell(supplier);
                }
                doc.add(tabel);

                JOptionPane.showMessageDialog(null, "DOWNLOAD SUKSES", "DOWNLOAD PDF", JOptionPane.PLAIN_MESSAGE);
                openFile(saveFile.toString()+".pdf");
//                openFile(saveFile.toString());
            }else{
                JOptionPane.showMessageDialog(null,"SILAHKAN ISI NAMA FILE");
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(kelolaBarang.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(kelolaBarang.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        doc.close();
        
    }//GEN-LAST:event_printActionPerformed

    private void cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariActionPerformed
        statusSearh=1;
        
        if(tfSearh.getText().isEmpty()){
            statusSearh =0;
        }else if(statusSearh==1){
            DefaultTableModel jTLaporanMasuk = new DefaultTableModel();
            jTLaporanMasuk.addColumn("Kode Barang");
            jTLaporanMasuk.addColumn("Nama Barang");
            jTLaporanMasuk.addColumn("Kandungan Nikotin");
            jTLaporanMasuk.addColumn("Type Barang");
            jTLaporanMasuk.addColumn("Harga Beli");
            jTLaporanMasuk.addColumn("Harga Jual");
            jTLaporanMasuk.addColumn("QTY");
            jTLaporanMasuk.addColumn("Suplier");
            jTLaporanMasuk.addColumn("Tanggal");
            String cari = tfSearh.getText();
        try{
//            Statement statement = (Statement) koneksi.getConnection().createStatement();
//            ResultSet res = statement.executeQuery("select * from barang where tanggal like '%"+cbCariBulan.getSelectedIndex()+"%'");
            String sql = "select * from barang where kode_barang like '"+cari+"'"
                        + "or nama_barang '"+cari+"'"
                        + "or suplier '"+cari+"' or tanggal '"+cari+"' order by kode_barang";
            Statement st;
            ResultSet rs;
            st = con.prepareStatement(sql);
            rs = st.executeQuery(sql);
//            while(rs.next()){
//                jTLaporanMasuk.addRow(new Object[]{
//                    rs.getString(0), 
//                    rs.getString(1),
//                    rs.getString(2),
//                    rs.getString(3),
//                    rs.getString(4),
//                    rs.getString(5),
//                    rs.getString(6),
//                    rs.getString(7),
//                    rs.getString(8),
//                });
//                
//            }
//            barang.setModel(jTLaporanMasuk);
            ArrayList<barang> list = getBarangList();
            Object[] row = new Object[9];
            for(int i=0; i < list.size(); i++){
            
                row[0] = list.get(i).getKodeBarang();
                row[1] = list.get(i).getNamaBarang();
                row[2] = list.get(i).getTypeBarang();
                row[3] = list.get(i).getKandunganNikotin();
                row[4] = list.get(i).getHargaJual();
                row[5] = list.get(i).getHargaBeli();
                row[6] = list.get(i).getStok();
                row[7] = list.get(i).getSuplier();
                row[8] = list.get(i).getTanggal();

                barang.setModel(jTLaporanMasuk);
            } 
        } catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, "Data Not Found");
        }
        }
    }//GEN-LAST:event_cariActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cari;
    private javax.swing.JButton jButton1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTLaporanMasuk;
    private javax.swing.JButton print;
    private javax.swing.JTextField tfSearh;
    // End of variables declaration//GEN-END:variables
}
